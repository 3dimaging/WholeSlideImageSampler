{
    "docs": [
        {
            "location": "/",
            "text": "Hello there!",
            "title": "Home"
        },
        {
            "location": "/slide_sampler/",
            "text": "modules.slide_sampler\n\n\n\nModule for sampling from a slide\n\n\nSlide_Sampler\n\n\n\nSlide_Sampler(self, wsi_file, desired_downsampling, size)\n\n\n\n\nA WSI patch sampler.\n\n\nImportant are:\nself.wsi - an OpenSlide object of the multiresolution WSI specified by wsi_file.\nself.background_mask - a background mask (generate with self.add_background_mask()). Stored as a numpy array where 1.0 denotes tissue.\n\n\nadd_background_mask\n\n\n\nSlide_Sampler.add_background_mask(self, desired_downsampling=32, threshold=4, disk_radius=10)\n\n\n\n\nAdd a background mask. That is a binary (0.0 vs 1.0), downsampled image where 1.0 denotes a tissue region.\nThis is achieved by otsu thresholding on the saturation channel followed by morphological closing and opening to remove noise.\nThe mask desired downsampling factor has a default of 32. For a WSI captured at 40X this corresponds to 1.25X.\nA moderate threshold is used to account for the fact that the desired downsampling may not be available.\nIf an appropriate level is not found an exception is raised.\n:param desired_downsampling:\n:param threshold:\n:param disk_radius: for morphological opening\n:return:\n\n\nview_WSI\n\n\n\nSlide_Sampler.view_WSI(self, dir='/home/peter/projects_/slide_loader/docs_builder')\n\n\n\n\nSave a thumbnail of the WSI\n:param dir:\n:return:\n\n\nview_background_mask\n\n\n\nSlide_Sampler.view_background_mask(self, dir='/home/peter/projects_/slide_loader/docs_builder')\n\n\n\n\nSave a visualization of the background mask.\n:param dir:\n:return:\n\n\nget_patch\n\n\n\nSlide_Sampler.get_patch(self)\n\n\n\n\nGet a random patch from the WSI.\nAccept if over 90% is non-background\n:return:\n\n\nprint_slide_properties\n\n\n\nSlide_Sampler.print_slide_properties(self)\n\n\n\n\nPrint some WSI properties\n:return:\n\n\nget_level_and_downsampling\n\n\n\nSlide_Sampler.get_level_and_downsampling(self, desired_downsampling, threshold)\n\n\n\n\nGet the level and downsampling for a desired downsampling.\nA threshold is used to allow for not exactly equal desired and true downsampling.\nIf an appropriate level is not found an exception is raised.\n:return:\n\n\nlevel_converter\n\n\n\nSlide_Sampler.level_converter(self, x, lvl_in, lvl_out, round=1)\n\n\n\n\nConvert a coordinate 'x' at lvl_in from lvl_in to lvl_out\n:param x:\n:param lvl_in:\n:param lvl_out:\n:return:",
            "title": "Slide sampler"
        }
    ]
}